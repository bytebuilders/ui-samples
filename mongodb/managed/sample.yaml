apiVersion: v1
kind: Secret
metadata:
  name: mongodb-auth
  namespace: demo
stringData:
  password: thisIs1StrongPassword
  username: root
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-config
  namespace: demo
stringData:
  mongod.conf: |
    net:
      maxIncomingConnections: 40000
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-configserver-config
  namespace: demo
stringData:
  mongod.conf: |
    net:
      maxIncomingConnections: 20000
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-mongos-config
  namespace: demo
stringData:
  mongod.conf: |
    net:
      maxIncomingConnections: 30000
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-shard-config
  namespace: demo
stringData:
  mongod.conf: |
    net:
      maxIncomingConnections: 40000
type: Opaque
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: mongodb-ca
  namespace: demo
spec:
  ca:
    secretName: mongodb-ca
---
apiVersion: kubedb.com/v1alpha2
kind: MongoDB
metadata:
  name: mongodb
  namespace: demo
spec:
  authSecret:
    name: mongodb-auth
  configSecret:
    name: mongodb-config
  init:
    waitForInitialRestore: true
  monitor:
    agent: prometheus.io
    prometheus:
      exporter:
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
  shardTopology:
    configServer:
      configSecret:
        name: mongodb-configserver-config
      replicas: 3
      storage:
        resources:
          requests:
            storage: 1Gi
        storageClassName: standard
    mongos:
      configSecret:
        name: mongodb-mongos-config
      replicas: 2
    shard:
      configSecret:
        name: mongodb-shard-config
      replicas: 3
      shards: 2
      storage:
        resources:
          requests:
            storage: 1Gi
        storageClassName: standard
  sslMode: requireSSL
  storageType: Durable
  terminationPolicy: WipeOut
  tls:
    issuerRef:
      apiGroup: cert-manager.io
      kind: Issuer
      name: mongo-ca
  version: 4.2.3
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/name: mongodbs.kubedb.com
    release: prometheus-stack
  name: mongodb
  namespace: demo
spec:
  endpoints:
  - honorLabels: true
    interval: 30s
    path: /metrics
    port: metrics
  namespaceSelector:
    matchNames:
    - demo
  selector:
    matchLabels:
      app.kubernetes.io/instance: mongodb
      app.kubernetes.io/name: mongodbs.kubedb.com
---
apiVersion: stash.appscode.com/v1alpha1
kind: Repository
metadata:
  labels:
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/name: mongodbs.kubedb.com
  name: mongodb-init-repo
  namespace: demo
spec:
  backend:
    gcs:
      bucket: stash-testing
      prefix: /demo/mongodb
    storageSecretName: gcs-secret
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-init-repo-cred
  namespace: demo
stringData:
  password: thisIs1StrongPassword
  username: root
type: Opaque
---
apiVersion: stash.appscode.com/v1alpha1
kind: Repository
metadata:
  labels:
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/name: mongodbs.kubedb.com
  name: mongodb-repo
  namespace: demo
spec:
  backend:
    gcs:
      bucket: stash-testing
      prefix: /demo/mongodb
    storageSecretName: gcs-secret
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-repo-cred
  namespace: demo
stringData:
  password: thisIs1StrongPassword
  username: root
type: Opaque
---
apiVersion: stash.appscode.com/v1beta1
kind: BackupConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/name: mongodbs.kubedb.com
  name: mongodb
  namespace: demo
spec:
  repository:
    name: mongodb-repo
  retentionPolicy:
    keepLast: 5
    name: keep-last-5
    prune: true
  schedule: '*/5 * * * *'
  target:
    ref:
      apiVersion: appcatalog.appscode.com/v1alpha1
      kind: AppBinding
      name: mongodb
  task:
    name: mongodb-backup-4.2.3-v5
---
apiVersion: stash.appscode.com/v1beta1
kind: RestoreSession
metadata:
  labels:
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/name: mongodbs.kubedb.com
  name: mongodb-init
  namespace: demo
spec:
  repository:
    name: mongodb-init-repo
  rules:
  - snapshots:
    - latest
  target:
    ref:
      apiVersion: appcatalog.appscode.com/v1alpha1
      kind: AppBinding
      name: mongodb
  task:
    name: mongodb-restore-4.2.3-v5
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-encryption-secret
  namespace: demo
stringData:
  RESTIC_PASSWORD: ""
---
apiVersion: core.kubestash.com/v1alpha1
kind: BackupConfiguration
metadata:
  name: mongodb
  namespace: demo
spec:
  target:
    apiGroup: kubedb.com
    kind: MongoDB
    name: mongodb
    namespace: demo
  backends:
    - name: mongodb-backend
      storageRef:
        name: mongodb-storage
        namespace: demo
      retentionPolicy:
        name: mongodb-retention-policy
        namespace: demo
  sessions:
    - name: mongodb-frequent-backup
      sessionHistoryLimit: 2
      scheduler:
        schedule: "*/5 * * * *"
        jobTemplate:
          backoffLimit: 1
      repositories:
        - name: mongodb-repo
          backend: mongodb-backend
          directory: /mongo-repo
          encryptionSecret:
            name: mongodb-encryption-secret
            namespace: demo
      addon:
        name: mongodb-addon
        tasks:
          - name: logical-backup
        jobTemplate:
          spec:
            securityContext:
              runAsUser: 0
              runAsGroup: 0
---
apiVersion: core.kubestash.com/v1alpha1
kind: RestoreSession
metadata:
  name: mongodb
  namespace: demo
spec:
  target:
    apiGroup: kubedb.com
    kind: MongoDB
    name: mongodb
    namespace: demo
  dataSource:
    snapshot: latest
    repository: mongodb-repo
    encryptionSecret:
      name: mongodb-encryption-secret
      namespace: demo
  addon:
    name: mongodb-addon
    tasks:
      - name: logical-backup-restore
    jobTemplate:
      spec:
        securityContext:
          runAsUser: 0
          runAsGroup: 0
---
apiVersion: autoscaling.kubedb.com/v1alpha1
kind: MongoDBAutoscaler
metadata:
  name: mongodb
  namespace: demo
spec:
  databaseRef:
    name: repl
  opsRequestOptions:
    timeout: 10m
    apply: IfReady
  compute:
    replicaSet:
      trigger: "On"
      podLifeTimeThreshold: 10m
      resourceDiffPercentage: 20
      minAllowed:
        cpu: 400m
        memory: 400Mi
      maxAllowed:
        cpu: 1
        memory: 2Gi
    nodeTopology:
      name: standard-basv2-family